#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Logica
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="hospitales")]
	public partial class OrmHospitalesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void Insertcalificacion(calificacion instance);
    partial void Updatecalificacion(calificacion instance);
    partial void Deletecalificacion(calificacion instance);
    partial void Insertcentro_medico(centro_medico instance);
    partial void Updatecentro_medico(centro_medico instance);
    partial void Deletecentro_medico(centro_medico instance);
    partial void Inserteps(eps instance);
    partial void Updateeps(eps instance);
    partial void Deleteeps(eps instance);
    partial void Insertespecialidad(especialidad instance);
    partial void Updateespecialidad(especialidad instance);
    partial void Deleteespecialidad(especialidad instance);
    partial void Inserttelefono(telefono instance);
    partial void Updatetelefono(telefono instance);
    partial void Deletetelefono(telefono instance);
    partial void Insertusuario(usuario instance);
    partial void Updateusuario(usuario instance);
    partial void Deleteusuario(usuario instance);
    #endregion
		
		public OrmHospitalesDataContext() : 
				base(global::Logica.Properties.Settings.Default.hospitalesConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public OrmHospitalesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrmHospitalesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrmHospitalesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrmHospitalesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<calificacion> calificacion
		{
			get
			{
				return this.GetTable<calificacion>();
			}
		}
		
		public System.Data.Linq.Table<centro_medico> centro_medico
		{
			get
			{
				return this.GetTable<centro_medico>();
			}
		}
		
		public System.Data.Linq.Table<centro_medico_has_especialidades> centro_medico_has_especialidades
		{
			get
			{
				return this.GetTable<centro_medico_has_especialidades>();
			}
		}
		
		public System.Data.Linq.Table<consulta> consulta
		{
			get
			{
				return this.GetTable<consulta>();
			}
		}
		
		public System.Data.Linq.Table<eps> eps
		{
			get
			{
				return this.GetTable<eps>();
			}
		}
		
		public System.Data.Linq.Table<eps_has_centromedico> eps_has_centromedico
		{
			get
			{
				return this.GetTable<eps_has_centromedico>();
			}
		}
		
		public System.Data.Linq.Table<especialidad> especialidad
		{
			get
			{
				return this.GetTable<especialidad>();
			}
		}
		
		public System.Data.Linq.Table<telefono> telefono
		{
			get
			{
				return this.GetTable<telefono>();
			}
		}
		
		public System.Data.Linq.Table<usuario> usuario
		{
			get
			{
				return this.GetTable<usuario>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_login")]
		public ISingleResult<sp_loginResult> sp_login([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(60)")] string nombre_usuario, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string contrasena)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nombre_usuario, contrasena);
			return ((ISingleResult<sp_loginResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.calificacion")]
	public partial class calificacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_calificacion;
		
		private string _calificacion1;
		
		private long _usuario_cedula;
		
		private int _centro_medico_id;
		
		private EntityRef<centro_medico> _centro_medico;
		
		private EntityRef<usuario> _usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_calificacionChanging(int value);
    partial void Onid_calificacionChanged();
    partial void Oncalificacion1Changing(string value);
    partial void Oncalificacion1Changed();
    partial void Onusuario_cedulaChanging(long value);
    partial void Onusuario_cedulaChanged();
    partial void Oncentro_medico_idChanging(int value);
    partial void Oncentro_medico_idChanged();
    #endregion
		
		public calificacion()
		{
			this._centro_medico = default(EntityRef<centro_medico>);
			this._usuario = default(EntityRef<usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_calificacion", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_calificacion
		{
			get
			{
				return this._id_calificacion;
			}
			set
			{
				if ((this._id_calificacion != value))
				{
					this.Onid_calificacionChanging(value);
					this.SendPropertyChanging();
					this._id_calificacion = value;
					this.SendPropertyChanged("id_calificacion");
					this.Onid_calificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="calificacion", Storage="_calificacion1", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string calificacion1
		{
			get
			{
				return this._calificacion1;
			}
			set
			{
				if ((this._calificacion1 != value))
				{
					this.Oncalificacion1Changing(value);
					this.SendPropertyChanging();
					this._calificacion1 = value;
					this.SendPropertyChanged("calificacion1");
					this.Oncalificacion1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usuario_cedula", DbType="BigInt NOT NULL")]
		public long usuario_cedula
		{
			get
			{
				return this._usuario_cedula;
			}
			set
			{
				if ((this._usuario_cedula != value))
				{
					if (this._usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onusuario_cedulaChanging(value);
					this.SendPropertyChanging();
					this._usuario_cedula = value;
					this.SendPropertyChanged("usuario_cedula");
					this.Onusuario_cedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_centro_medico_id", DbType="Int NOT NULL")]
		public int centro_medico_id
		{
			get
			{
				return this._centro_medico_id;
			}
			set
			{
				if ((this._centro_medico_id != value))
				{
					if (this._centro_medico.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncentro_medico_idChanging(value);
					this.SendPropertyChanging();
					this._centro_medico_id = value;
					this.SendPropertyChanged("centro_medico_id");
					this.Oncentro_medico_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="centro_medico_calificacion", Storage="_centro_medico", ThisKey="centro_medico_id", OtherKey="id_centro_medico", IsForeignKey=true)]
		public centro_medico centro_medico
		{
			get
			{
				return this._centro_medico.Entity;
			}
			set
			{
				centro_medico previousValue = this._centro_medico.Entity;
				if (((previousValue != value) 
							|| (this._centro_medico.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._centro_medico.Entity = null;
						previousValue.calificacion.Remove(this);
					}
					this._centro_medico.Entity = value;
					if ((value != null))
					{
						value.calificacion.Add(this);
						this._centro_medico_id = value.id_centro_medico;
					}
					else
					{
						this._centro_medico_id = default(int);
					}
					this.SendPropertyChanged("centro_medico");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_calificacion", Storage="_usuario", ThisKey="usuario_cedula", OtherKey="numero_cedula", IsForeignKey=true)]
		public usuario usuario
		{
			get
			{
				return this._usuario.Entity;
			}
			set
			{
				usuario previousValue = this._usuario.Entity;
				if (((previousValue != value) 
							|| (this._usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._usuario.Entity = null;
						previousValue.calificacion.Remove(this);
					}
					this._usuario.Entity = value;
					if ((value != null))
					{
						value.calificacion.Add(this);
						this._usuario_cedula = value.numero_cedula;
					}
					else
					{
						this._usuario_cedula = default(long);
					}
					this.SendPropertyChanged("usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.centro_medico")]
	public partial class centro_medico : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_centro_medico;
		
		private string _nombre_centro_medico;
		
		private string _nivel_atencion;
		
		private string _horarios;
		
		private string _direccion;
		
		private string _foto;
		
		private EntitySet<calificacion> _calificacion;
		
		private EntitySet<telefono> _telefono;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_centro_medicoChanging(int value);
    partial void Onid_centro_medicoChanged();
    partial void Onnombre_centro_medicoChanging(string value);
    partial void Onnombre_centro_medicoChanged();
    partial void Onnivel_atencionChanging(string value);
    partial void Onnivel_atencionChanged();
    partial void OnhorariosChanging(string value);
    partial void OnhorariosChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OnfotoChanging(string value);
    partial void OnfotoChanged();
    #endregion
		
		public centro_medico()
		{
			this._calificacion = new EntitySet<calificacion>(new Action<calificacion>(this.attach_calificacion), new Action<calificacion>(this.detach_calificacion));
			this._telefono = new EntitySet<telefono>(new Action<telefono>(this.attach_telefono), new Action<telefono>(this.detach_telefono));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_centro_medico", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_centro_medico
		{
			get
			{
				return this._id_centro_medico;
			}
			set
			{
				if ((this._id_centro_medico != value))
				{
					this.Onid_centro_medicoChanging(value);
					this.SendPropertyChanging();
					this._id_centro_medico = value;
					this.SendPropertyChanged("id_centro_medico");
					this.Onid_centro_medicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre_centro_medico", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string nombre_centro_medico
		{
			get
			{
				return this._nombre_centro_medico;
			}
			set
			{
				if ((this._nombre_centro_medico != value))
				{
					this.Onnombre_centro_medicoChanging(value);
					this.SendPropertyChanging();
					this._nombre_centro_medico = value;
					this.SendPropertyChanged("nombre_centro_medico");
					this.Onnombre_centro_medicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nivel_atencion", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string nivel_atencion
		{
			get
			{
				return this._nivel_atencion;
			}
			set
			{
				if ((this._nivel_atencion != value))
				{
					this.Onnivel_atencionChanging(value);
					this.SendPropertyChanging();
					this._nivel_atencion = value;
					this.SendPropertyChanged("nivel_atencion");
					this.Onnivel_atencionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_horarios", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string horarios
		{
			get
			{
				return this._horarios;
			}
			set
			{
				if ((this._horarios != value))
				{
					this.OnhorariosChanging(value);
					this.SendPropertyChanging();
					this._horarios = value;
					this.SendPropertyChanged("horarios");
					this.OnhorariosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foto", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string foto
		{
			get
			{
				return this._foto;
			}
			set
			{
				if ((this._foto != value))
				{
					this.OnfotoChanging(value);
					this.SendPropertyChanging();
					this._foto = value;
					this.SendPropertyChanged("foto");
					this.OnfotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="centro_medico_calificacion", Storage="_calificacion", ThisKey="id_centro_medico", OtherKey="centro_medico_id")]
		public EntitySet<calificacion> calificacion
		{
			get
			{
				return this._calificacion;
			}
			set
			{
				this._calificacion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="centro_medico_telefono", Storage="_telefono", ThisKey="id_centro_medico", OtherKey="id_centro_medico")]
		public EntitySet<telefono> telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				this._telefono.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_calificacion(calificacion entity)
		{
			this.SendPropertyChanging();
			entity.centro_medico = this;
		}
		
		private void detach_calificacion(calificacion entity)
		{
			this.SendPropertyChanging();
			entity.centro_medico = null;
		}
		
		private void attach_telefono(telefono entity)
		{
			this.SendPropertyChanging();
			entity.centro_medico = this;
		}
		
		private void detach_telefono(telefono entity)
		{
			this.SendPropertyChanging();
			entity.centro_medico = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.centro_medico_has_especialidades")]
	public partial class centro_medico_has_especialidades
	{
		
		private int _centro_medico_id;
		
		private int _especialidad_id;
		
		public centro_medico_has_especialidades()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_centro_medico_id", DbType="Int NOT NULL")]
		public int centro_medico_id
		{
			get
			{
				return this._centro_medico_id;
			}
			set
			{
				if ((this._centro_medico_id != value))
				{
					this._centro_medico_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_especialidad_id", DbType="Int NOT NULL")]
		public int especialidad_id
		{
			get
			{
				return this._especialidad_id;
			}
			set
			{
				if ((this._especialidad_id != value))
				{
					this._especialidad_id = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.consulta")]
	public partial class consulta
	{
		
		private long _usuario_cedula;
		
		private int _centro_medico_id;
		
		public consulta()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usuario_cedula", DbType="BigInt NOT NULL")]
		public long usuario_cedula
		{
			get
			{
				return this._usuario_cedula;
			}
			set
			{
				if ((this._usuario_cedula != value))
				{
					this._usuario_cedula = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_centro_medico_id", DbType="Int NOT NULL")]
		public int centro_medico_id
		{
			get
			{
				return this._centro_medico_id;
			}
			set
			{
				if ((this._centro_medico_id != value))
				{
					this._centro_medico_id = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.eps")]
	public partial class eps : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _nit;
		
		private string _nombre_eps;
		
		private long _numero_telefono;
		
		private string _direccion;
		
		private EntitySet<usuario> _usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnitChanging(string value);
    partial void OnnitChanged();
    partial void Onnombre_epsChanging(string value);
    partial void Onnombre_epsChanged();
    partial void Onnumero_telefonoChanging(long value);
    partial void Onnumero_telefonoChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    #endregion
		
		public eps()
		{
			this._usuario = new EntitySet<usuario>(new Action<usuario>(this.attach_usuario), new Action<usuario>(this.detach_usuario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nit", DbType="VarChar(13) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string nit
		{
			get
			{
				return this._nit;
			}
			set
			{
				if ((this._nit != value))
				{
					this.OnnitChanging(value);
					this.SendPropertyChanging();
					this._nit = value;
					this.SendPropertyChanged("nit");
					this.OnnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre_eps", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nombre_eps
		{
			get
			{
				return this._nombre_eps;
			}
			set
			{
				if ((this._nombre_eps != value))
				{
					this.Onnombre_epsChanging(value);
					this.SendPropertyChanging();
					this._nombre_eps = value;
					this.SendPropertyChanged("nombre_eps");
					this.Onnombre_epsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numero_telefono", DbType="BigInt NOT NULL")]
		public long numero_telefono
		{
			get
			{
				return this._numero_telefono;
			}
			set
			{
				if ((this._numero_telefono != value))
				{
					this.Onnumero_telefonoChanging(value);
					this.SendPropertyChanging();
					this._numero_telefono = value;
					this.SendPropertyChanged("numero_telefono");
					this.Onnumero_telefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="eps_usuario", Storage="_usuario", ThisKey="nit", OtherKey="eps_id_eps")]
		public EntitySet<usuario> usuario
		{
			get
			{
				return this._usuario;
			}
			set
			{
				this._usuario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_usuario(usuario entity)
		{
			this.SendPropertyChanging();
			entity.eps = this;
		}
		
		private void detach_usuario(usuario entity)
		{
			this.SendPropertyChanging();
			entity.eps = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.eps_has_centromedico")]
	public partial class eps_has_centromedico
	{
		
		private string _nit_eps;
		
		private int _id_centro_medico;
		
		public eps_has_centromedico()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nit_eps", DbType="VarChar(13) NOT NULL", CanBeNull=false)]
		public string nit_eps
		{
			get
			{
				return this._nit_eps;
			}
			set
			{
				if ((this._nit_eps != value))
				{
					this._nit_eps = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_centro_medico", DbType="Int NOT NULL")]
		public int id_centro_medico
		{
			get
			{
				return this._id_centro_medico;
			}
			set
			{
				if ((this._id_centro_medico != value))
				{
					this._id_centro_medico = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.especialidad")]
	public partial class especialidad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_especialidad;
		
		private string _nombre_especialidad;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_especialidadChanging(int value);
    partial void Onid_especialidadChanged();
    partial void Onnombre_especialidadChanging(string value);
    partial void Onnombre_especialidadChanged();
    #endregion
		
		public especialidad()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_especialidad", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_especialidad
		{
			get
			{
				return this._id_especialidad;
			}
			set
			{
				if ((this._id_especialidad != value))
				{
					this.Onid_especialidadChanging(value);
					this.SendPropertyChanging();
					this._id_especialidad = value;
					this.SendPropertyChanged("id_especialidad");
					this.Onid_especialidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre_especialidad", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string nombre_especialidad
		{
			get
			{
				return this._nombre_especialidad;
			}
			set
			{
				if ((this._nombre_especialidad != value))
				{
					this.Onnombre_especialidadChanging(value);
					this.SendPropertyChanging();
					this._nombre_especialidad = value;
					this.SendPropertyChanged("nombre_especialidad");
					this.Onnombre_especialidadChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.telefono")]
	public partial class telefono : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_telefono;
		
		private long _numero_telefono;
		
		private int _id_centro_medico;
		
		private EntityRef<centro_medico> _centro_medico;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_telefonoChanging(int value);
    partial void Onid_telefonoChanged();
    partial void Onnumero_telefonoChanging(long value);
    partial void Onnumero_telefonoChanged();
    partial void Onid_centro_medicoChanging(int value);
    partial void Onid_centro_medicoChanged();
    #endregion
		
		public telefono()
		{
			this._centro_medico = default(EntityRef<centro_medico>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_telefono", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_telefono
		{
			get
			{
				return this._id_telefono;
			}
			set
			{
				if ((this._id_telefono != value))
				{
					this.Onid_telefonoChanging(value);
					this.SendPropertyChanging();
					this._id_telefono = value;
					this.SendPropertyChanged("id_telefono");
					this.Onid_telefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numero_telefono", DbType="BigInt NOT NULL")]
		public long numero_telefono
		{
			get
			{
				return this._numero_telefono;
			}
			set
			{
				if ((this._numero_telefono != value))
				{
					this.Onnumero_telefonoChanging(value);
					this.SendPropertyChanging();
					this._numero_telefono = value;
					this.SendPropertyChanged("numero_telefono");
					this.Onnumero_telefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_centro_medico", DbType="Int NOT NULL")]
		public int id_centro_medico
		{
			get
			{
				return this._id_centro_medico;
			}
			set
			{
				if ((this._id_centro_medico != value))
				{
					if (this._centro_medico.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_centro_medicoChanging(value);
					this.SendPropertyChanging();
					this._id_centro_medico = value;
					this.SendPropertyChanged("id_centro_medico");
					this.Onid_centro_medicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="centro_medico_telefono", Storage="_centro_medico", ThisKey="id_centro_medico", OtherKey="id_centro_medico", IsForeignKey=true)]
		public centro_medico centro_medico
		{
			get
			{
				return this._centro_medico.Entity;
			}
			set
			{
				centro_medico previousValue = this._centro_medico.Entity;
				if (((previousValue != value) 
							|| (this._centro_medico.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._centro_medico.Entity = null;
						previousValue.telefono.Remove(this);
					}
					this._centro_medico.Entity = value;
					if ((value != null))
					{
						value.telefono.Add(this);
						this._id_centro_medico = value.id_centro_medico;
					}
					else
					{
						this._id_centro_medico = default(int);
					}
					this.SendPropertyChanged("centro_medico");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.usuario")]
	public partial class usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _numero_cedula;
		
		private string _nombres;
		
		private string _primer_apellido;
		
		private string _segundo_apellido;
		
		private string _nombre_usuario;
		
		private string _contrasena;
		
		private string _rol;
		
		private string _eps_id_eps;
		
		private EntitySet<calificacion> _calificacion;
		
		private EntityRef<eps> _eps;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onnumero_cedulaChanging(long value);
    partial void Onnumero_cedulaChanged();
    partial void OnnombresChanging(string value);
    partial void OnnombresChanged();
    partial void Onprimer_apellidoChanging(string value);
    partial void Onprimer_apellidoChanged();
    partial void Onsegundo_apellidoChanging(string value);
    partial void Onsegundo_apellidoChanged();
    partial void Onnombre_usuarioChanging(string value);
    partial void Onnombre_usuarioChanged();
    partial void OncontrasenaChanging(string value);
    partial void OncontrasenaChanged();
    partial void OnrolChanging(string value);
    partial void OnrolChanged();
    partial void Oneps_id_epsChanging(string value);
    partial void Oneps_id_epsChanged();
    #endregion
		
		public usuario()
		{
			this._calificacion = new EntitySet<calificacion>(new Action<calificacion>(this.attach_calificacion), new Action<calificacion>(this.detach_calificacion));
			this._eps = default(EntityRef<eps>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numero_cedula", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long numero_cedula
		{
			get
			{
				return this._numero_cedula;
			}
			set
			{
				if ((this._numero_cedula != value))
				{
					this.Onnumero_cedulaChanging(value);
					this.SendPropertyChanging();
					this._numero_cedula = value;
					this.SendPropertyChanged("numero_cedula");
					this.Onnumero_cedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombres", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nombres
		{
			get
			{
				return this._nombres;
			}
			set
			{
				if ((this._nombres != value))
				{
					this.OnnombresChanging(value);
					this.SendPropertyChanging();
					this._nombres = value;
					this.SendPropertyChanged("nombres");
					this.OnnombresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_primer_apellido", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string primer_apellido
		{
			get
			{
				return this._primer_apellido;
			}
			set
			{
				if ((this._primer_apellido != value))
				{
					this.Onprimer_apellidoChanging(value);
					this.SendPropertyChanging();
					this._primer_apellido = value;
					this.SendPropertyChanged("primer_apellido");
					this.Onprimer_apellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_segundo_apellido", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string segundo_apellido
		{
			get
			{
				return this._segundo_apellido;
			}
			set
			{
				if ((this._segundo_apellido != value))
				{
					this.Onsegundo_apellidoChanging(value);
					this.SendPropertyChanging();
					this._segundo_apellido = value;
					this.SendPropertyChanged("segundo_apellido");
					this.Onsegundo_apellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre_usuario", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string nombre_usuario
		{
			get
			{
				return this._nombre_usuario;
			}
			set
			{
				if ((this._nombre_usuario != value))
				{
					this.Onnombre_usuarioChanging(value);
					this.SendPropertyChanging();
					this._nombre_usuario = value;
					this.SendPropertyChanged("nombre_usuario");
					this.Onnombre_usuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contrasena", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string contrasena
		{
			get
			{
				return this._contrasena;
			}
			set
			{
				if ((this._contrasena != value))
				{
					this.OncontrasenaChanging(value);
					this.SendPropertyChanging();
					this._contrasena = value;
					this.SendPropertyChanged("contrasena");
					this.OncontrasenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rol", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string rol
		{
			get
			{
				return this._rol;
			}
			set
			{
				if ((this._rol != value))
				{
					this.OnrolChanging(value);
					this.SendPropertyChanging();
					this._rol = value;
					this.SendPropertyChanged("rol");
					this.OnrolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eps_id_eps", DbType="VarChar(13)")]
		public string eps_id_eps
		{
			get
			{
				return this._eps_id_eps;
			}
			set
			{
				if ((this._eps_id_eps != value))
				{
					if (this._eps.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oneps_id_epsChanging(value);
					this.SendPropertyChanging();
					this._eps_id_eps = value;
					this.SendPropertyChanged("eps_id_eps");
					this.Oneps_id_epsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_calificacion", Storage="_calificacion", ThisKey="numero_cedula", OtherKey="usuario_cedula")]
		public EntitySet<calificacion> calificacion
		{
			get
			{
				return this._calificacion;
			}
			set
			{
				this._calificacion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="eps_usuario", Storage="_eps", ThisKey="eps_id_eps", OtherKey="nit", IsForeignKey=true)]
		public eps eps
		{
			get
			{
				return this._eps.Entity;
			}
			set
			{
				eps previousValue = this._eps.Entity;
				if (((previousValue != value) 
							|| (this._eps.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._eps.Entity = null;
						previousValue.usuario.Remove(this);
					}
					this._eps.Entity = value;
					if ((value != null))
					{
						value.usuario.Add(this);
						this._eps_id_eps = value.nit;
					}
					else
					{
						this._eps_id_eps = default(string);
					}
					this.SendPropertyChanged("eps");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_calificacion(calificacion entity)
		{
			this.SendPropertyChanging();
			entity.usuario = this;
		}
		
		private void detach_calificacion(calificacion entity)
		{
			this.SendPropertyChanging();
			entity.usuario = null;
		}
	}
	
	public partial class sp_loginResult
	{
		
		private long _numero_cedula;
		
		private string _nombres;
		
		private string _primer_apellido;
		
		private string _segundo_apellido;
		
		private string _nombre_usuario;
		
		private string _contrasena;
		
		private string _rol;
		
		private string _eps_id_eps;
		
		public sp_loginResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numero_cedula", DbType="BigInt NOT NULL")]
		public long numero_cedula
		{
			get
			{
				return this._numero_cedula;
			}
			set
			{
				if ((this._numero_cedula != value))
				{
					this._numero_cedula = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombres", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nombres
		{
			get
			{
				return this._nombres;
			}
			set
			{
				if ((this._nombres != value))
				{
					this._nombres = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_primer_apellido", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string primer_apellido
		{
			get
			{
				return this._primer_apellido;
			}
			set
			{
				if ((this._primer_apellido != value))
				{
					this._primer_apellido = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_segundo_apellido", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string segundo_apellido
		{
			get
			{
				return this._segundo_apellido;
			}
			set
			{
				if ((this._segundo_apellido != value))
				{
					this._segundo_apellido = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre_usuario", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string nombre_usuario
		{
			get
			{
				return this._nombre_usuario;
			}
			set
			{
				if ((this._nombre_usuario != value))
				{
					this._nombre_usuario = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contrasena", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string contrasena
		{
			get
			{
				return this._contrasena;
			}
			set
			{
				if ((this._contrasena != value))
				{
					this._contrasena = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rol", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string rol
		{
			get
			{
				return this._rol;
			}
			set
			{
				if ((this._rol != value))
				{
					this._rol = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eps_id_eps", DbType="VarChar(13)")]
		public string eps_id_eps
		{
			get
			{
				return this._eps_id_eps;
			}
			set
			{
				if ((this._eps_id_eps != value))
				{
					this._eps_id_eps = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
